

Microchip Technology PIC LITE Macro Assembler V1.40 build -251452761 
                                                                                               Tue Jan 03 11:18:22 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	16F1829
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 1.40
    28                           ; Generated 01/12/2016 GMT
    29                           ; 
    30                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F1829 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0097                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009A                     	;# 
   104  009B                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  0111                     	;# 
   113  0112                     	;# 
   114  0113                     	;# 
   115  0114                     	;# 
   116  0115                     	;# 
   117  0116                     	;# 
   118  0117                     	;# 
   119  0118                     	;# 
   120  0119                     	;# 
   121  011A                     	;# 
   122  011B                     	;# 
   123  011D                     	;# 
   124  011E                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  018E                     	;# 
   128  0191                     	;# 
   129  0191                     	;# 
   130  0192                     	;# 
   131  0193                     	;# 
   132  0193                     	;# 
   133  0193                     	;# 
   134  0194                     	;# 
   135  0195                     	;# 
   136  0196                     	;# 
   137  0199                     	;# 
   138  019A                     	;# 
   139  019B                     	;# 
   140  019B                     	;# 
   141  019C                     	;# 
   142  019D                     	;# 
   143  019E                     	;# 
   144  019F                     	;# 
   145  020C                     	;# 
   146  020D                     	;# 
   147  020E                     	;# 
   148  0211                     	;# 
   149  0211                     	;# 
   150  0212                     	;# 
   151  0212                     	;# 
   152  0213                     	;# 
   153  0213                     	;# 
   154  0214                     	;# 
   155  0214                     	;# 
   156  0215                     	;# 
   157  0215                     	;# 
   158  0215                     	;# 
   159  0216                     	;# 
   160  0216                     	;# 
   161  0217                     	;# 
   162  0217                     	;# 
   163  0219                     	;# 
   164  021A                     	;# 
   165  021B                     	;# 
   166  021C                     	;# 
   167  021D                     	;# 
   168  021E                     	;# 
   169  021F                     	;# 
   170  0291                     	;# 
   171  0291                     	;# 
   172  0292                     	;# 
   173  0293                     	;# 
   174  0294                     	;# 
   175  0295                     	;# 
   176  0295                     	;# 
   177  0296                     	;# 
   178  0298                     	;# 
   179  0298                     	;# 
   180  0299                     	;# 
   181  029A                     	;# 
   182  029B                     	;# 
   183  029C                     	;# 
   184  029D                     	;# 
   185  029E                     	;# 
   186  0311                     	;# 
   187  0311                     	;# 
   188  0312                     	;# 
   189  0313                     	;# 
   190  0318                     	;# 
   191  0318                     	;# 
   192  0319                     	;# 
   193  031A                     	;# 
   194  038C                     	;# 
   195  038D                     	;# 
   196  038E                     	;# 
   197  0391                     	;# 
   198  0392                     	;# 
   199  0393                     	;# 
   200  0394                     	;# 
   201  0395                     	;# 
   202  0396                     	;# 
   203  039A                     	;# 
   204  039C                     	;# 
   205  039D                     	;# 
   206  039E                     	;# 
   207  039F                     	;# 
   208  0415                     	;# 
   209  0416                     	;# 
   210  0417                     	;# 
   211  041C                     	;# 
   212  041D                     	;# 
   213  041E                     	;# 
   214  0FE4                     	;# 
   215  0FE5                     	;# 
   216  0FE6                     	;# 
   217  0FE7                     	;# 
   218  0FE8                     	;# 
   219  0FE9                     	;# 
   220  0FEA                     	;# 
   221  0FEB                     	;# 
   222  0FED                     	;# 
   223  0FEE                     	;# 
   224  0FEF                     	;# 
   225  0000                     	;# 
   226  0001                     	;# 
   227  0002                     	;# 
   228  0003                     	;# 
   229  0004                     	;# 
   230  0005                     	;# 
   231  0006                     	;# 
   232  0007                     	;# 
   233  0008                     	;# 
   234  0009                     	;# 
   235  000A                     	;# 
   236  000B                     	;# 
   237  000C                     	;# 
   238  000D                     	;# 
   239  000E                     	;# 
   240  0011                     	;# 
   241  0012                     	;# 
   242  0013                     	;# 
   243  0014                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0016                     	;# 
   247  0017                     	;# 
   248  0018                     	;# 
   249  0019                     	;# 
   250  001A                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  008E                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  010C                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  0111                     	;# 
   277  0112                     	;# 
   278  0113                     	;# 
   279  0114                     	;# 
   280  0115                     	;# 
   281  0116                     	;# 
   282  0117                     	;# 
   283  0118                     	;# 
   284  0119                     	;# 
   285  011A                     	;# 
   286  011B                     	;# 
   287  011D                     	;# 
   288  011E                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291  018E                     	;# 
   292  0191                     	;# 
   293  0191                     	;# 
   294  0192                     	;# 
   295  0193                     	;# 
   296  0193                     	;# 
   297  0193                     	;# 
   298  0194                     	;# 
   299  0195                     	;# 
   300  0196                     	;# 
   301  0199                     	;# 
   302  019A                     	;# 
   303  019B                     	;# 
   304  019B                     	;# 
   305  019C                     	;# 
   306  019D                     	;# 
   307  019E                     	;# 
   308  019F                     	;# 
   309  020C                     	;# 
   310  020D                     	;# 
   311  020E                     	;# 
   312  0211                     	;# 
   313  0211                     	;# 
   314  0212                     	;# 
   315  0212                     	;# 
   316  0213                     	;# 
   317  0213                     	;# 
   318  0214                     	;# 
   319  0214                     	;# 
   320  0215                     	;# 
   321  0215                     	;# 
   322  0215                     	;# 
   323  0216                     	;# 
   324  0216                     	;# 
   325  0217                     	;# 
   326  0217                     	;# 
   327  0219                     	;# 
   328  021A                     	;# 
   329  021B                     	;# 
   330  021C                     	;# 
   331  021D                     	;# 
   332  021E                     	;# 
   333  021F                     	;# 
   334  0291                     	;# 
   335  0291                     	;# 
   336  0292                     	;# 
   337  0293                     	;# 
   338  0294                     	;# 
   339  0295                     	;# 
   340  0295                     	;# 
   341  0296                     	;# 
   342  0298                     	;# 
   343  0298                     	;# 
   344  0299                     	;# 
   345  029A                     	;# 
   346  029B                     	;# 
   347  029C                     	;# 
   348  029D                     	;# 
   349  029E                     	;# 
   350  0311                     	;# 
   351  0311                     	;# 
   352  0312                     	;# 
   353  0313                     	;# 
   354  0318                     	;# 
   355  0318                     	;# 
   356  0319                     	;# 
   357  031A                     	;# 
   358  038C                     	;# 
   359  038D                     	;# 
   360  038E                     	;# 
   361  0391                     	;# 
   362  0392                     	;# 
   363  0393                     	;# 
   364  0394                     	;# 
   365  0395                     	;# 
   366  0396                     	;# 
   367  039A                     	;# 
   368  039C                     	;# 
   369  039D                     	;# 
   370  039E                     	;# 
   371  039F                     	;# 
   372  0415                     	;# 
   373  0416                     	;# 
   374  0417                     	;# 
   375  041C                     	;# 
   376  041D                     	;# 
   377  041E                     	;# 
   378  0FE4                     	;# 
   379  0FE5                     	;# 
   380  0FE6                     	;# 
   381  0FE7                     	;# 
   382  0FE8                     	;# 
   383  0FE9                     	;# 
   384  0FEA                     	;# 
   385  0FEB                     	;# 
   386  0FED                     	;# 
   387  0FEE                     	;# 
   388  0FEF                     	;# 
   389  000B                     _INTCON	set	11
   390  0011                     _PIR1bits	set	17
   391  0013                     _PIR3bits	set	19
   392  001C                     _T2CON	set	28
   393  000C                     _PORTA	set	12
   394  008E                     _ADIF	set	142
   395  009B                     _TMR6IF	set	155
   396  009D                     _ADCON0	set	157
   397  009D                     _ADCON0bits	set	157
   398  009E                     _ADCON1	set	158
   399  0099                     _OSCCON	set	153
   400  0091                     _PIE1bits	set	145
   401  0093                     _PIE3bits	set	147
   402  008C                     _TRISAbits	set	140
   403  008E                     _TRISCbits	set	142
   404  011D                     _APFCON0bits	set	285
   405  010E                     _LATC	set	270
   406  019B                     _SPBRG	set	411
   407  018C                     _ANSELAbits	set	396
   408  019F                     _BAUDCONbits	set	415
   409  0199                     _RCREG	set	409
   410  019D                     _RCSTAbits	set	413
   411  019C                     _SPBRGH	set	412
   412  019A                     _TXREG	set	410
   413  019E                     _TXSTAbits	set	414
   414  0CFB                     _BRG16	set	3323
   415  0CF1                     _TRMT	set	3313
   416  0393                     _IOCAFbits	set	915
   417  0392                     _IOCANbits	set	914
   418  0391                     _IOCAPbits	set	913
   419  041D                     _PR6	set	1053
   420  041E                     _T6CON	set	1054
   421  041E                     _T6CONbits	set	1054
   422                           
   423                           	psect	stringtext
   424  02BE                     __pstringtext:	
   425  02BE                     STR_1:	
   426  02BE  3456               	retlw	86	;'V'
   427  02BF  3400               	retlw	0
   428                           
   429                           ; #config settings
   430  0000                     
   431                           	psect	cinit
   432  00A3                     start_initialization:	
   433  00A3                     __initialization:	
   434                           
   435                           ; Clear objects allocated to BANK0
   436  00A3  3020               	movlw	low __pbssBANK0
   437  00A4  0084               	movwf	4
   438  00A5  3000               	movlw	high __pbssBANK0
   439  00A6  0085               	movwf	5
   440  00A7  3025               	movlw	37
   441  00A8  3182  22B4         	fcall	clear_ram0
   442  00AA                     end_of_initialization:	
   443                           ;End of C runtime variable initialization code
   444                           
   445  00AA                     __end_of__initialization:	
   446  00AA  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   447  00AB  0020               	movlb	0
   448  00AC  3182  2A39         	ljmp	_main	;jump to C main() function
   449                           
   450                           	psect	bssBANK0
   451  0020                     __pbssBANK0:	
   452  0020                     _should_autobaud:	
   453  0020                     	ds	1
   454  0021                     _sensors:	
   455  0021                     	ds	36
   456                           
   457                           	psect	clrtext
   458  02B4                     clear_ram0:	
   459                           ;	Called with FSR0 containing the base address, and
   460                           ;	WREG with the size to clear
   461                           
   462  02B4  0064               	clrwdt	;clear the watchdog before getting into this loop
   463  02B5                     clrloop0:	
   464  02B5  0180               	clrf	0	;clear RAM location pointed to by FSR
   465  02B6  3101               	addfsr 0,1
   466  02B7  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   467  02B8  2AB5               	goto	clrloop0	;have we reached the end yet?
   468  02B9  3400               	retlw	0	;all done for this memory range, return
   469                           
   470                           	psect	cstackCOMMON
   471  0070                     __pcstackCOMMON:	
   472  0070                     ?_initialize_PIC:	
   473  0070                     ?_initialize_sensors:	
   474                           ; 1 bytes @ 0x0
   475                           
   476  0070                     ?_autoBaud:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  0070                     ?_process_debounce:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  0070                     ?_enable_debounce:	
   483                           ; 1 bytes @ 0x0
   484                           
   485  0070                     ?_default_handler:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  0070                     ?_temperature_handler:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  0070                     ?_switch_handler:	
   492                           ; 1 bytes @ 0x0
   493                           
   494  0070                     ?_UART_write:	
   495                           ; 1 bytes @ 0x0
   496                           
   497  0070                     ?_ISR:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  0070                     ?_get_port_pin:	
   501                           ; 1 bytes @ 0x0
   502                           
   503  0070                     ?i1___bmul:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0070                     ?_main:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     default_handler@sensor:	
   510                           ; 2 bytes @ 0x0
   511                           
   512  0070                     temperature_handler@sensor:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     switch_handler@sensor:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     i1___bmul@multiplicand:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  0070                     get_port_pin@port:	
   522                           ; 1 bytes @ 0x0
   523                           
   524                           
   525                           ; 2 bytes @ 0x0
   526  0070                     	ds	1
   527  0071                     ??_default_handler:	
   528  0071                     ??_temperature_handler:	
   529                           ; 1 bytes @ 0x1
   530                           
   531  0071                     ??_switch_handler:	
   532                           ; 1 bytes @ 0x1
   533                           
   534  0071                     ??i1___bmul:	
   535                           ; 1 bytes @ 0x1
   536                           
   537                           
   538                           ; 1 bytes @ 0x1
   539  0071                     	ds	1
   540  0072                     get_port_pin@pin:	
   541  0072                     i1___bmul@multiplier:	
   542                           ; 1 bytes @ 0x2
   543                           
   544                           
   545                           ; 1 bytes @ 0x2
   546  0072                     	ds	1
   547  0073                     ??_get_port_pin:	
   548  0073                     i1___bmul@product:	
   549                           ; 1 bytes @ 0x3
   550                           
   551                           
   552                           ; 1 bytes @ 0x3
   553  0073                     	ds	1
   554  0074                     ??_process_debounce:	
   555  0074                     ??_enable_debounce:	
   556                           ; 1 bytes @ 0x4
   557                           
   558                           
   559                           ; 1 bytes @ 0x4
   560  0074                     	ds	2
   561  0076                     enable_debounce@sensor:	
   562  0076                     process_debounce@sensor:	
   563                           ; 1 bytes @ 0x6
   564                           
   565                           
   566                           ; 1 bytes @ 0x6
   567  0076                     	ds	1
   568  0077                     ??_ISR:	
   569                           
   570                           ; 1 bytes @ 0x7
   571  0077                     	ds	2
   572  0079                     ISR@x:	
   573                           
   574                           ; 1 bytes @ 0x9
   575  0079                     	ds	1
   576  007A                     ISR@shouldDebounce:	
   577                           
   578                           ; 2 bytes @ 0xA
   579  007A                     	ds	2
   580  007C                     ISR@i:	
   581                           
   582                           ; 2 bytes @ 0xC
   583  007C                     	ds	2
   584                           
   585                           	psect	cstackBANK0
   586  0045                     __pcstackBANK0:	
   587  0045                     ??_initialize_PIC:	
   588  0045                     ??_autoBaud:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0045                     ??_UART_write:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0045                     ?___bmul:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0045                     UART_write@data:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0045                     ___bmul@multiplicand:	
   601                           ; 1 bytes @ 0x0
   602                           
   603                           
   604                           ; 1 bytes @ 0x0
   605  0045                     	ds	1
   606  0046                     ?_UART_write_text:	
   607  0046                     ??___bmul:	
   608                           ; 1 bytes @ 0x1
   609                           
   610  0046                     autoBaud@discard:	
   611                           ; 1 bytes @ 0x1
   612                           
   613  0046                     UART_write_text@text:	
   614                           ; 1 bytes @ 0x1
   615                           
   616                           
   617                           ; 2 bytes @ 0x1
   618  0046                     	ds	1
   619  0047                     ___bmul@product:	
   620  0047                     autoBaud@sync_count:	
   621                           ; 1 bytes @ 0x2
   622                           
   623                           
   624                           ; 2 bytes @ 0x2
   625  0047                     	ds	1
   626  0048                     ??_UART_write_text:	
   627  0048                     ___bmul@multiplier:	
   628                           ; 1 bytes @ 0x3
   629                           
   630                           
   631                           ; 1 bytes @ 0x3
   632  0048                     	ds	1
   633  0049                     ??_initialize_sensors:	
   634  0049                     UART_write_text@count:	
   635                           ; 1 bytes @ 0x4
   636                           
   637  0049                     autoBaud@index:	
   638                           ; 2 bytes @ 0x4
   639                           
   640                           
   641                           ; 2 bytes @ 0x4
   642  0049                     	ds	3
   643  004C                     initialize_sensors@i:	
   644                           
   645                           ; 2 bytes @ 0x7
   646  004C                     	ds	2
   647  004E                     ??_main:	
   648                           
   649                           	psect	maintext
   650  0239                     __pmaintext:	
   651                           ; 1 bytes @ 0x9
   652 ;;
   653 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   654 ;;
   655 ;; *************** function _main *****************
   656 ;; Defined at:
   657 ;;		line 42 in file "main.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;		None
   660 ;; Auto vars:     Size  Location     Type
   661 ;;		None
   662 ;; Return value:  Size  Location     Type
   663 ;;                  2   84[None  ] int 
   664 ;; Registers used:
   665 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   666 ;; Tracked objects:
   667 ;;		On entry : B1F/0
   668 ;;		On exit  : 0/0
   669 ;;		Unchanged: 0/0
   670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   675 ;;Total ram usage:        0 bytes
   676 ;; Hardware stack levels required when called:    5
   677 ;; This function calls:
   678 ;;		_UART_write_text
   679 ;;		_autoBaud
   680 ;;		_initialize_PIC
   681 ;;		_initialize_sensors
   682 ;; This function is called by:
   683 ;;		Startup code after reset
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687                           
   688                           ;psect for function _main
   689  0239                     _main:	
   690                           
   691                           ;main.c: 43: initialize_PIC();
   692                           
   693                           ;incstack = 0
   694                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   695  0239  3181  2191  3182   	fcall	_initialize_PIC
   696                           
   697                           ;main.c: 44: initialize_sensors();
   698  023C  3180  20AE  3182   	fcall	_initialize_sensors
   699  023F                     l1146:	
   700                           ;main.c: 46: while(1){
   701                           
   702                           
   703                           ;main.c: 47: if(should_autobaud){
   704  023F  0020               	movlb	0	; select bank0
   705  0240  0820               	movf	_should_autobaud,w
   706  0241  1903               	btfsc	3,2
   707  0242  2A53               	goto	l1156
   708                           
   709                           ;main.c: 48: autoBaud();
   710  0243  3181  2122  3182   	fcall	_autoBaud
   711                           
   712                           ;main.c: 49: UART_write_text("V");
   713  0246  30BE               	movlw	low (STR_1| (0+32768))
   714  0247  0020               	movlb	0	; select bank0
   715  0248  00C6               	movwf	UART_write_text@text
   716  0249  3082               	movlw	high (STR_1| (0+32768))
   717  024A  00C7               	movwf	UART_write_text@text+1
   718  024B  3182  225D  3182   	fcall	_UART_write_text
   719                           
   720                           ;main.c: 50: PIE1bits.RCIE = 1;
   721  024E  0021               	movlb	1	; select bank1
   722  024F  1691               	bsf	17,5	;volatile
   723                           
   724                           ;main.c: 51: PIE1bits.TXIE = 1;
   725  0250  1611               	bsf	17,4	;volatile
   726                           
   727                           ;main.c: 52: should_autobaud = 0;
   728  0251  0020               	movlb	0	; select bank0
   729  0252  01A0               	clrf	_should_autobaud
   730  0253                     l1156:	
   731                           
   732                           ;main.c: 53: }
   733                           ;main.c: 56: if(RCSTAbits.OERR)
   734  0253  0023               	movlb	3	; select bank3
   735  0254  1C9D               	btfss	29,1	;volatile
   736  0255  2A58               	goto	l87
   737                           
   738                           ;main.c: 57: {
   739                           ;main.c: 58: RCSTAbits.SPEN = 0;
   740  0256  139D               	bcf	29,7	;volatile
   741                           
   742                           ;main.c: 59: RCSTAbits.SPEN = 1;
   743  0257  179D               	bsf	29,7	;volatile
   744  0258                     l87:	
   745                           
   746                           ;main.c: 60: }
   747                           ;main.c: 62: if(RCSTAbits.FERR)
   748  0258  1D1D               	btfss	29,2	;volatile
   749  0259  2A3F               	goto	l1146
   750                           
   751                           ;main.c: 63: {
   752                           ;main.c: 64: RCSTAbits.SPEN = 0;
   753  025A  139D               	bcf	29,7	;volatile
   754                           
   755                           ;main.c: 65: RCSTAbits.SPEN = 1;
   756  025B  179D               	bsf	29,7	;volatile
   757  025C  2A3F               	goto	l1146
   758  025D                     __end_of_main:	
   759                           ;main.c: 66: }
   760                           ;main.c: 67: }
   761                           ;main.c: 69: return (0);
   762                           ;	Return value of _main is never used
   763                           
   764                           
   765                           	psect	text1
   766  00AE                     __ptext1:	
   767 ;; *************** function _initialize_sensors *****************
   768 ;; Defined at:
   769 ;;		line 202 in file "main.c"
   770 ;; Parameters:    Size  Location     Type
   771 ;;		None
   772 ;; Auto vars:     Size  Location     Type
   773 ;;  i               2    7[BANK0 ] int 
   774 ;; Return value:  Size  Location     Type
   775 ;;                  1    wreg      void 
   776 ;; Registers used:
   777 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   778 ;; Tracked objects:
   779 ;;		On entry : 0/0
   780 ;;		On exit  : 0/0
   781 ;;		Unchanged: 0/0
   782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   784 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   785 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
   786 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
   787 ;;Total ram usage:        5 bytes
   788 ;; Hardware stack levels used:    1
   789 ;; Hardware stack levels required when called:    4
   790 ;; This function calls:
   791 ;;		___bmul
   792 ;; This function is called by:
   793 ;;		_main
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           
   798                           ;psect for function _initialize_sensors
   799  00AE                     _initialize_sensors:	
   800                           
   801                           ;main.c: 203: for(int i = 0; i < 6; ++i){
   802                           
   803                           ;incstack = 0
   804                           ; Regs used in _initialize_sensors: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   805  00AE  0020               	movlb	0	; select bank0
   806  00AF  01CC               	clrf	initialize_sensors@i
   807  00B0  01CD               	clrf	initialize_sensors@i+1
   808  00B1  084D               	movf	initialize_sensors@i+1,w
   809  00B2  3A80               	xorlw	128
   810  00B3  00C9               	movwf	??_initialize_sensors
   811  00B4  3080               	movlw	128
   812  00B5  0249               	subwf	??_initialize_sensors,w
   813  00B6  1D03               	skipz
   814  00B7  28BA               	goto	u455
   815  00B8  3006               	movlw	6
   816  00B9  024C               	subwf	initialize_sensors@i,w
   817  00BA                     u455:	
   818  00BA  1803               	btfsc	3,0
   819  00BB  2918               	goto	l1068
   820  00BC                     l1062:	
   821                           
   822                           ;main.c: 204: sensors[i].index = i;
   823  00BC  0020               	movlb	0	; select bank0
   824  00BD  084C               	movf	initialize_sensors@i,w
   825  00BE  00C9               	movwf	??_initialize_sensors
   826  00BF  3006               	movlw	6
   827  00C0  00CA               	movwf	??_initialize_sensors+1
   828  00C1  084A               	movf	??_initialize_sensors+1,w
   829  00C2  00C5               	movwf	___bmul@multiplicand
   830  00C3  084C               	movf	initialize_sensors@i,w
   831  00C4  3182  2279  3180   	fcall	___bmul
   832  00C7  3E21               	addlw	(low (_sensors| 0))& (0+255)
   833  00C8  0086               	movwf	6
   834  00C9  0187               	clrf	7
   835  00CA  0020               	movlb	0	; select bank0
   836  00CB  0849               	movf	??_initialize_sensors,w
   837  00CC  0081               	movwf	1
   838                           
   839                           ;main.c: 205: sensors[i].debounce.port = &PORTA;
   840  00CD  300C               	movlw	12
   841  00CE  00C9               	movwf	??_initialize_sensors
   842  00CF  3000               	movlw	0
   843  00D0  00CA               	movwf	??_initialize_sensors+1
   844  00D1  3006               	movlw	6
   845  00D2  00CB               	movwf	??_initialize_sensors+2
   846  00D3  084B               	movf	??_initialize_sensors+2,w
   847  00D4  00C5               	movwf	___bmul@multiplicand
   848  00D5  084C               	movf	initialize_sensors@i,w
   849  00D6  3182  2279  3180   	fcall	___bmul
   850  00D9  3E04               	addlw	4
   851  00DA  3E21               	addlw	(low (_sensors| 0))& (0+255)
   852  00DB  0086               	movwf	6
   853  00DC  0187               	clrf	7
   854  00DD  0020               	movlb	0	; select bank0
   855  00DE  0849               	movf	??_initialize_sensors,w
   856  00DF  3FC0               	movwi [0]fsr1
   857  00E0  084A               	movf	??_initialize_sensors+1,w
   858  00E1  3FC1               	movwi [1]fsr1
   859                           
   860                           ;main.c: 206: sensors[i].debounce.pin = i;
   861  00E2  084C               	movf	initialize_sensors@i,w
   862  00E3  00C9               	movwf	??_initialize_sensors
   863  00E4  3006               	movlw	6
   864  00E5  00CA               	movwf	??_initialize_sensors+1
   865  00E6  084A               	movf	??_initialize_sensors+1,w
   866  00E7  00C5               	movwf	___bmul@multiplicand
   867  00E8  084C               	movf	initialize_sensors@i,w
   868  00E9  3182  2279  3180   	fcall	___bmul
   869  00EC  3E03               	addlw	3
   870  00ED  3E21               	addlw	(low (_sensors| 0))& (0+255)
   871  00EE  0086               	movwf	6
   872  00EF  0187               	clrf	7
   873  00F0  0020               	movlb	0	; select bank0
   874  00F1  0DC9               	rlf	??_initialize_sensors,f
   875  00F2  0DC9               	rlf	??_initialize_sensors,f
   876  00F3  0801               	movf	1,w
   877  00F4  0649               	xorwf	??_initialize_sensors,w
   878  00F5  39E3               	andlw	-29
   879  00F6  0649               	xorwf	??_initialize_sensors,w
   880  00F7  0081               	movwf	1
   881                           
   882                           ;main.c: 207: sensors[i].handler = default_handler;
   883  00F8  3006               	movlw	6
   884  00F9  00C9               	movwf	??_initialize_sensors
   885  00FA  0849               	movf	??_initialize_sensors,w
   886  00FB  00C5               	movwf	___bmul@multiplicand
   887  00FC  084C               	movf	initialize_sensors@i,w
   888  00FD  3182  2279  3180   	fcall	___bmul
   889  0100  3E01               	addlw	1
   890  0101  3E21               	addlw	(low (_sensors| 0))& (0+255)
   891  0102  0086               	movwf	6
   892  0103  0187               	clrf	7
   893  0104  30C0               	movlw	low _default_handler
   894  0105  3FC0               	movwi [0]fsr1
   895  0106  3002               	movlw	high _default_handler
   896  0107  3FC1               	movwi [1]fsr1
   897  0108  3001               	movlw	1
   898  0109  0020               	movlb	0	; select bank0
   899  010A  07CC               	addwf	initialize_sensors@i,f
   900  010B  3000               	movlw	0
   901  010C  3DCD               	addwfc	initialize_sensors@i+1,f
   902  010D  084D               	movf	initialize_sensors@i+1,w
   903  010E  3A80               	xorlw	128
   904  010F  00C9               	movwf	??_initialize_sensors
   905  0110  3080               	movlw	128
   906  0111  0249               	subwf	??_initialize_sensors,w
   907  0112  1D03               	skipz
   908  0113  2916               	goto	u465
   909  0114  3006               	movlw	6
   910  0115  024C               	subwf	initialize_sensors@i,w
   911  0116                     u465:	
   912  0116  1C03               	skipc
   913  0117  28BC               	goto	l1062
   914  0118                     l1068:	
   915                           
   916                           ;main.c: 208: }
   917                           ;main.c: 211: sensors[0].handler = temperature_handler;
   918  0118  30C1               	movlw	low _temperature_handler
   919  0119  0020               	movlb	0	; select bank0
   920  011A  00A2               	movwf	low ((_sensors| 0+1))
   921  011B  3002               	movlw	high _temperature_handler
   922  011C  00A3               	movwf	(low ((_sensors| 0+1))+1)
   923                           
   924                           ;main.c: 214: sensors[2].handler = switch_handler;
   925  011D  30BA               	movlw	low _switch_handler
   926  011E  00AE               	movwf	low ((_sensors| 0+13))
   927  011F  3002               	movlw	high _switch_handler
   928  0120  00AF               	movwf	(low ((_sensors| 0+13))+1)
   929  0121  0008               	return
   930  0122                     __end_of_initialize_sensors:	
   931                           
   932                           	psect	text2
   933  0279                     __ptext2:	
   934 ;; *************** function ___bmul *****************
   935 ;; Defined at:
   936 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\Umul8.c"
   937 ;; Parameters:    Size  Location     Type
   938 ;;  multiplier      1    wreg     unsigned char 
   939 ;;  multiplicand    1    0[BANK0 ] unsigned char 
   940 ;; Auto vars:     Size  Location     Type
   941 ;;  multiplier      1    3[BANK0 ] unsigned char 
   942 ;;  product         1    2[BANK0 ] unsigned char 
   943 ;; Return value:  Size  Location     Type
   944 ;;                  1    wreg      unsigned char 
   945 ;; Registers used:
   946 ;;		wreg, status,2, status,0
   947 ;; Tracked objects:
   948 ;;		On entry : 0/0
   949 ;;		On exit  : 0/0
   950 ;;		Unchanged: 0/0
   951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   952 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
   953 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   954 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
   955 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
   956 ;;Total ram usage:        4 bytes
   957 ;; Hardware stack levels used:    1
   958 ;; Hardware stack levels required when called:    3
   959 ;; This function calls:
   960 ;;		Nothing
   961 ;; This function is called by:
   962 ;;		_initialize_sensors
   963 ;;		_ISR
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           
   968                           ;psect for function ___bmul
   969  0279                     ___bmul:	
   970                           
   971                           ;incstack = 0
   972                           ; Regs used in ___bmul: [wreg+status,2+status,0]
   973                           ;___bmul@multiplier stored from wreg
   974  0279  0020               	movlb	0	; select bank0
   975  027A  00C8               	movwf	___bmul@multiplier
   976  027B  01C7               	clrf	___bmul@product
   977  027C                     l964:	
   978  027C  1C48               	btfss	___bmul@multiplier,0
   979  027D  2A82               	goto	l968
   980  027E  0845               	movf	___bmul@multiplicand,w
   981  027F  00C6               	movwf	??___bmul
   982  0280  0846               	movf	??___bmul,w
   983  0281  07C7               	addwf	___bmul@product,f
   984  0282                     l968:	
   985  0282  1003               	clrc
   986  0283  0DC5               	rlf	___bmul@multiplicand,f
   987  0284  1003               	clrc
   988  0285  0CC8               	rrf	___bmul@multiplier,f
   989  0286  0848               	movf	___bmul@multiplier,w
   990  0287  1D03               	btfss	3,2
   991  0288  2A7C               	goto	l964
   992  0289  0847               	movf	___bmul@product,w
   993  028A  0008               	return
   994  028B                     __end_of___bmul:	
   995                           
   996                           	psect	text3
   997  0191                     __ptext3:	
   998 ;; *************** function _initialize_PIC *****************
   999 ;; Defined at:
  1000 ;;		line 99 in file "main.c"
  1001 ;; Parameters:    Size  Location     Type
  1002 ;;		None
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;		None
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  1    wreg      void 
  1007 ;; Registers used:
  1008 ;;		wreg, status,2
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1018 ;;Total ram usage:        0 bytes
  1019 ;; Hardware stack levels used:    1
  1020 ;; Hardware stack levels required when called:    3
  1021 ;; This function calls:
  1022 ;;		Nothing
  1023 ;; This function is called by:
  1024 ;;		_main
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028                           
  1029                           ;psect for function _initialize_PIC
  1030  0191                     _initialize_PIC:	
  1031                           
  1032                           ;main.c: 105: OSCCON = 0b00111000;
  1033                           
  1034                           ;incstack = 0
  1035                           ; Regs used in _initialize_PIC: [wreg+status,2]
  1036  0191  3038               	movlw	56
  1037  0192  0021               	movlb	1	; select bank1
  1038  0193  0099               	movwf	25	;volatile
  1039                           
  1040                           ;main.c: 116: INTCON = 0b11001000;
  1041  0194  30C8               	movlw	200
  1042  0195  008B               	movwf	11	;volatile
  1043                           
  1044                           ;main.c: 119: TRISCbits.TRISC0 = 0;
  1045  0196  100E               	bcf	14,0	;volatile
  1046                           
  1047                           ;main.c: 120: TRISCbits.TRISC1 = 0;
  1048  0197  108E               	bcf	14,1	;volatile
  1049                           
  1050                           ;main.c: 121: TRISCbits.TRISC2 = 0;
  1051  0198  110E               	bcf	14,2	;volatile
  1052                           
  1053                           ;main.c: 122: TRISCbits.TRISC3 = 0;
  1054  0199  118E               	bcf	14,3	;volatile
  1055                           
  1056                           ;main.c: 123: LATC = 0;
  1057  019A  0022               	movlb	2	; select bank2
  1058  019B  018E               	clrf	14	;volatile
  1059                           
  1060                           ;main.c: 126: TRISAbits.TRISA0 = 1;
  1061  019C  0021               	movlb	1	; select bank1
  1062  019D  140C               	bsf	12,0	;volatile
  1063                           
  1064                           ;main.c: 127: ANSELAbits.ANSA0 = 1;
  1065  019E  0023               	movlb	3	; select bank3
  1066  019F  140C               	bsf	12,0	;volatile
  1067                           
  1068                           ;main.c: 130: TRISAbits.TRISA1 = 1;
  1069  01A0  0021               	movlb	1	; select bank1
  1070  01A1  148C               	bsf	12,1	;volatile
  1071                           
  1072                           ;main.c: 131: ANSELAbits.ANSA1 = 0;
  1073  01A2  0023               	movlb	3	; select bank3
  1074  01A3  108C               	bcf	12,1	;volatile
  1075                           
  1076                           ;main.c: 134: TRISAbits.TRISA2 = 1;
  1077  01A4  0021               	movlb	1	; select bank1
  1078  01A5  150C               	bsf	12,2	;volatile
  1079                           
  1080                           ;main.c: 135: ANSELAbits.ANSA2 = 0;
  1081  01A6  0023               	movlb	3	; select bank3
  1082  01A7  110C               	bcf	12,2	;volatile
  1083                           
  1084                           ;main.c: 138: TRISAbits.TRISA3 = 1;
  1085  01A8  0021               	movlb	1	; select bank1
  1086  01A9  158C               	bsf	12,3	;volatile
  1087                           
  1088                           ;main.c: 141: TRISAbits.TRISA4 = 1;
  1089  01AA  160C               	bsf	12,4	;volatile
  1090                           
  1091                           ;main.c: 142: ANSELAbits.ANSA4 = 0;
  1092  01AB  0023               	movlb	3	; select bank3
  1093  01AC  120C               	bcf	12,4	;volatile
  1094                           
  1095                           ;main.c: 145: TRISAbits.TRISA5 = 1;
  1096  01AD  0021               	movlb	1	; select bank1
  1097  01AE  168C               	bsf	12,5	;volatile
  1098                           
  1099                           ;main.c: 148: IOCANbits.IOCAN1 = 1;
  1100  01AF  0027               	movlb	7	; select bank7
  1101  01B0  1492               	bsf	18,1	;volatile
  1102                           
  1103                           ;main.c: 149: IOCANbits.IOCAN2 = 1;
  1104  01B1  1512               	bsf	18,2	;volatile
  1105                           
  1106                           ;main.c: 150: IOCANbits.IOCAN4 = 1;
  1107  01B2  1612               	bsf	18,4	;volatile
  1108                           
  1109                           ;main.c: 153: IOCAPbits.IOCAP3 = 1;
  1110  01B3  1591               	bsf	17,3	;volatile
  1111                           
  1112                           ;main.c: 154: IOCAPbits.IOCAP5 = 1;
  1113  01B4  1691               	bsf	17,5	;volatile
  1114                           
  1115                           ;main.c: 161: ADCON0 = 0b00000001;
  1116  01B5  3001               	movlw	1
  1117  01B6  0021               	movlb	1	; select bank1
  1118  01B7  009D               	movwf	29	;volatile
  1119                           
  1120                           ;main.c: 168: ADCON1 = 0b10000000;
  1121  01B8  3080               	movlw	128
  1122  01B9  009E               	movwf	30	;volatile
  1123                           
  1124                           ;main.c: 170: PIR1bits.ADIF = 0;
  1125  01BA  0020               	movlb	0	; select bank0
  1126  01BB  1311               	bcf	17,6	;volatile
  1127                           
  1128                           ;main.c: 171: PIE1bits.ADIE = 1;
  1129  01BC  0021               	movlb	1	; select bank1
  1130  01BD  1711               	bsf	17,6	;volatile
  1131                           
  1132                           ;main.c: 174: T2CON = 0b01111111;
  1133  01BE  307F               	movlw	127
  1134  01BF  0020               	movlb	0	; select bank0
  1135  01C0  009C               	movwf	28	;volatile
  1136                           
  1137                           ;main.c: 175: PIE1bits.TMR2IE = 1;
  1138  01C1  0021               	movlb	1	; select bank1
  1139  01C2  1491               	bsf	17,1	;volatile
  1140                           
  1141                           ;main.c: 182: T6CON = 0b00100000;
  1142  01C3  3020               	movlw	32
  1143  01C4  0028               	movlb	8	; select bank8
  1144  01C5  009E               	movwf	30	;volatile
  1145                           
  1146                           ;main.c: 183: PR6 = 125;
  1147  01C6  307D               	movlw	125
  1148  01C7  009D               	movwf	29	;volatile
  1149                           
  1150                           ;main.c: 184: PIE3bits.TMR6IE = 1;
  1151  01C8  0021               	movlb	1	; select bank1
  1152  01C9  1593               	bsf	19,3	;volatile
  1153                           
  1154                           ;main.c: 187: APFCON0bits.RXDTSEL = 1;
  1155  01CA  0022               	movlb	2	; select bank2
  1156  01CB  179D               	bsf	29,7	;volatile
  1157                           
  1158                           ;main.c: 188: APFCON0bits.TXCKSEL = 1;
  1159  01CC  151D               	bsf	29,2	;volatile
  1160                           
  1161                           ;main.c: 190: BRG16 = 1;
  1162  01CD  0023               	movlb	3	; select bank3
  1163  01CE  159F               	bsf	31,3	;volatile
  1164                           
  1165                           ;main.c: 191: TXSTAbits.BRGH = 1;
  1166  01CF  151E               	bsf	30,2	;volatile
  1167                           
  1168                           ;main.c: 192: SPBRG = 12;
  1169  01D0  3000               	movlw	0
  1170  01D1  009C               	movwf	28	;volatile
  1171  01D2  300C               	movlw	12
  1172  01D3  009B               	movwf	27	;volatile
  1173                           
  1174                           ;main.c: 194: TXSTAbits.SYNC = 0;
  1175  01D4  121E               	bcf	30,4	;volatile
  1176                           
  1177                           ;main.c: 195: RCSTAbits.SPEN = 1;
  1178  01D5  179D               	bsf	29,7	;volatile
  1179                           
  1180                           ;main.c: 196: TXSTAbits.TXEN = 1;
  1181  01D6  169E               	bsf	30,5	;volatile
  1182                           
  1183                           ;main.c: 197: RCSTAbits.CREN = 1;
  1184  01D7  161D               	bsf	29,4	;volatile
  1185                           
  1186                           ;main.c: 199: PIE1bits.RCIE = 1;
  1187  01D8  0021               	movlb	1	; select bank1
  1188  01D9  1691               	bsf	17,5	;volatile
  1189  01DA  0008               	return
  1190  01DB                     __end_of_initialize_PIC:	
  1191                           
  1192                           	psect	text4
  1193  0122                     __ptext4:	
  1194 ;; *************** function _autoBaud *****************
  1195 ;; Defined at:
  1196 ;;		line 217 in file "main.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;		None
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;  index           2    4[BANK0 ] int 
  1201 ;;  sync_count      2    2[BANK0 ] int 
  1202 ;;  discard         1    1[BANK0 ] unsigned char 
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  1    wreg      void 
  1205 ;; Registers used:
  1206 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1213 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1214 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1215 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1216 ;;Total ram usage:        6 bytes
  1217 ;; Hardware stack levels used:    1
  1218 ;; Hardware stack levels required when called:    3
  1219 ;; This function calls:
  1220 ;;		Nothing
  1221 ;; This function is called by:
  1222 ;;		_main
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226                           
  1227                           ;psect for function _autoBaud
  1228  0122                     _autoBaud:	
  1229  0122  2987               	goto	l1100
  1230  0123                     l125:	
  1231                           ;main.c: 226: {
  1232                           ;main.c: 227: case 0:
  1233                           
  1234                           ;main.c: 225: switch(index)
  1235                           
  1236                           ;main.c: 221: int sync_count;
  1237                           ;main.c: 223: try:
  1238                           
  1239                           ;main.c: 219: char discard;
  1240                           ;main.c: 220: int index = 0;
  1241                           
  1242                           ;incstack = 0
  1243                           ; Regs used in _autoBaud: [wreg-fsr0h+status,2+status,0]
  1244                           
  1245                           
  1246                           ;main.c: 228: BAUDCONbits.BRG16 = 0;
  1247  0123  0023               	movlb	3	; select bank3
  1248  0124  119F               	bcf	31,3	;volatile
  1249  0125  292B               	goto	L1
  1250  0126                     l127:	
  1251                           ;main.c: 231: case 1:
  1252                           
  1253                           ;main.c: 230: break;
  1254                           
  1255                           ;main.c: 229: TXSTAbits.BRGH = 0;
  1256                           
  1257                           
  1258                           ;main.c: 232: BAUDCONbits.BRG16 = 0;
  1259  0126  0023               	movlb	3	; select bank3
  1260  0127  119F               	bcf	31,3	;volatile
  1261  0128  292F               	goto	L2
  1262  0129                     l128:	
  1263                           ;main.c: 235: case 2:
  1264                           
  1265                           ;main.c: 234: break;
  1266                           
  1267                           ;main.c: 233: TXSTAbits.BRGH = 1;
  1268                           
  1269                           
  1270                           ;main.c: 236: BAUDCONbits.BRG16 = 1;
  1271  0129  0023               	movlb	3	; select bank3
  1272  012A  159F               	bsf	31,3	;volatile
  1273  012B                     L1:	
  1274                           
  1275                           ;main.c: 237: TXSTAbits.BRGH = 0;
  1276  012B  111E               	bcf	30,2	;volatile
  1277                           
  1278                           ;main.c: 238: break;
  1279  012C  2930               	goto	l126
  1280  012D                     l129:	
  1281                           ;main.c: 239: case 3:
  1282                           
  1283                           
  1284                           ;main.c: 240: BAUDCONbits.BRG16 = 1;
  1285  012D  0023               	movlb	3	; select bank3
  1286  012E  159F               	bsf	31,3	;volatile
  1287  012F                     L2:	
  1288                           
  1289                           ;main.c: 241: TXSTAbits.BRGH = 1;
  1290  012F  151E               	bsf	30,2	;volatile
  1291  0130                     l126:	
  1292                           ;main.c: 243: }
  1293                           
  1294                           ;main.c: 242: break;
  1295                           
  1296                           
  1297                           ;main.c: 245: BAUDCONbits.ABDEN = 1;
  1298  0130  0023               	movlb	3	; select bank3
  1299  0131  141F               	bsf	31,0	;volatile
  1300  0132                     l130:	
  1301                           ;main.c: 246: while(!PIR1bits.RCIF);
  1302                           
  1303  0132  0020               	movlb	0	; select bank0
  1304  0133  1E91               	btfss	17,5	;volatile
  1305  0134  2932               	goto	l130
  1306                           
  1307                           ;main.c: 247: discard = RCREG;
  1308  0135  0023               	movlb	3	; select bank3
  1309  0136  0819               	movf	25,w	;volatile
  1310  0137  0020               	movlb	0	; select bank0
  1311  0138  00C5               	movwf	??_autoBaud
  1312  0139  0845               	movf	??_autoBaud,w
  1313  013A  00C6               	movwf	autoBaud@discard
  1314                           
  1315                           ;main.c: 249: if(SPBRG != 0)
  1316  013B  0023               	movlb	3	; select bank3
  1317  013C  081B               	movf	27,w	;volatile
  1318  013D  041C               	iorwf	28,w	;volatile
  1319  013E  1903               	btfsc	3,2
  1320  013F  2944               	goto	l1082
  1321                           
  1322                           ;main.c: 250: {
  1323                           ;main.c: 251: --SPBRG;
  1324  0140  3001               	movlw	1
  1325  0141  029B               	subwf	27,f	;volatile
  1326  0142  3000               	movlw	0
  1327  0143  3B9C               	subwfb	28,f	;volatile
  1328  0144                     l1082:	
  1329                           
  1330                           ;main.c: 252: }
  1331                           ;main.c: 255: if(BAUDCONbits.ABDOVF)
  1332  0144  1F9F               	btfss	31,7	;volatile
  1333  0145  295C               	goto	l134
  1334                           
  1335                           ;main.c: 256: {
  1336                           ;main.c: 257: BAUDCONbits.ABDOVF = 0;
  1337  0146  139F               	bcf	31,7	;volatile
  1338  0147                     l1074:	
  1339                           
  1340                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1341                           ; Switch size 1, requested type "space"
  1342                           ; Number of cases is 1, Range of values is 0 to 0
  1343                           ; switch strategies available:
  1344                           ; Name         Instructions Cycles
  1345                           ; simple_byte            4     3 (average)
  1346                           ; direct_byte            8     6 (fixed)
  1347                           ; jumptable            260     6 (fixed)
  1348                           ;	Chosen strategy is simple_byte
  1349  0147  0020               	movlb	0	; select bank0
  1350  0148  084A               	movf	autoBaud@index+1,w
  1351  0149  3A00               	xorlw	0	; case 0
  1352  014A  1903               	skipnz
  1353  014B  294D               	goto	l1258
  1354  014C  2930               	goto	l126
  1355  014D                     l1258:	
  1356                           
  1357                           ; Switch size 1, requested type "space"
  1358                           ; Number of cases is 4, Range of values is 0 to 3
  1359                           ; switch strategies available:
  1360                           ; Name         Instructions Cycles
  1361                           ; simple_byte           13     7 (average)
  1362                           ; direct_byte           14     6 (fixed)
  1363                           ; jumptable            260     6 (fixed)
  1364                           ;	Chosen strategy is simple_byte
  1365  014D  0849               	movf	autoBaud@index,w
  1366  014E  3A00               	xorlw	0	; case 0
  1367  014F  1903               	skipnz
  1368  0150  2923               	goto	l125
  1369  0151  3A01               	xorlw	1	; case 1
  1370  0152  1903               	skipnz
  1371  0153  2926               	goto	l127
  1372  0154  3A03               	xorlw	3	; case 2
  1373  0155  1903               	skipnz
  1374  0156  2929               	goto	l128
  1375  0157  3A01               	xorlw	1	; case 3
  1376  0158  1903               	skipnz
  1377  0159  292D               	goto	l129
  1378  015A  2930               	goto	l126
  1379                           
  1380                           ;main.c: 258: goto try;
  1381  015B  2930               	goto	l126
  1382  015C                     l134:	
  1383                           
  1384                           ;main.c: 259: }
  1385                           ;main.c: 260: if(!BAUDCONbits.BRG16 && SPBRGH)
  1386  015C  199F               	btfsc	31,3	;volatile
  1387  015D  2961               	goto	l1090
  1388  015E  081C               	movf	28,w	;volatile
  1389  015F  1D03               	btfss	3,2
  1390  0160  2947               	goto	l1074
  1391  0161                     l1090:	
  1392                           ;main.c: 261: {
  1393                           ;main.c: 262: goto try;
  1394                           
  1395                           
  1396                           ;main.c: 263: }
  1397                           ;main.c: 266: for (sync_count=0; sync_count < 2; ++sync_count)
  1398  0161  0020               	movlb	0	; select bank0
  1399  0162  01C7               	clrf	autoBaud@sync_count
  1400  0163  01C8               	clrf	autoBaud@sync_count+1
  1401  0164                     L3:	
  1402  0164  0848               	movf	autoBaud@sync_count+1,w
  1403  0165  3A80               	xorlw	128
  1404  0166  00C5               	movwf	??_autoBaud
  1405  0167  3080               	movlw	128
  1406  0168  0245               	subwf	??_autoBaud,w
  1407  0169  1D03               	skipz
  1408  016A  296D               	goto	u525
  1409  016B  3002               	movlw	2
  1410  016C  0247               	subwf	autoBaud@sync_count,w
  1411  016D                     u525:	
  1412  016D  1803               	btfsc	3,0
  1413  016E  0008               	return
  1414  016F                     l138:	
  1415                           ;main.c: 267: {
  1416                           ;main.c: 268: while(!PIR1bits.RCIF);
  1417                           
  1418  016F  0020               	movlb	0	; select bank0
  1419  0170  1E91               	btfss	17,5	;volatile
  1420  0171  296F               	goto	l138
  1421                           
  1422                           ;main.c: 269: if(RCREG != 'U')
  1423  0172  3055               	movlw	85
  1424  0173  0023               	movlb	3	; select bank3
  1425  0174  0619               	xorwf	25,w	;volatile
  1426  0175  1903               	btfsc	3,2
  1427  0176  298B               	goto	l1102
  1428                           
  1429                           ;main.c: 270: {
  1430                           ;main.c: 271: ++index;
  1431  0177  3001               	movlw	1
  1432  0178  0020               	movlb	0	; select bank0
  1433  0179  07C9               	addwf	autoBaud@index,f
  1434  017A  3000               	movlw	0
  1435  017B  3DCA               	addwfc	autoBaud@index+1,f
  1436                           
  1437                           ;main.c: 272: if(index > 3)
  1438  017C  084A               	movf	autoBaud@index+1,w
  1439  017D  3A80               	xorlw	128
  1440  017E  00C5               	movwf	??_autoBaud
  1441  017F  3080               	movlw	128
  1442  0180  0245               	subwf	??_autoBaud,w
  1443  0181  1D03               	skipz
  1444  0182  2985               	goto	u555
  1445  0183  3004               	movlw	4
  1446  0184  0249               	subwf	autoBaud@index,w
  1447  0185                     u555:	
  1448  0185  1C03               	skipc
  1449  0186  2947               	goto	l1074
  1450  0187                     l1100:	
  1451                           
  1452                           ;main.c: 273: index = 0;
  1453  0187  0020               	movlb	0	; select bank0
  1454  0188  01C9               	clrf	autoBaud@index
  1455  0189  01CA               	clrf	autoBaud@index+1
  1456                           
  1457                           ;main.c: 274: goto try;
  1458  018A  2947               	goto	l1074
  1459  018B                     l1102:	
  1460  018B  3001               	movlw	1
  1461  018C  0020               	movlb	0	; select bank0
  1462  018D  07C7               	addwf	autoBaud@sync_count,f
  1463  018E  3000               	movlw	0
  1464  018F  3DC8               	addwfc	autoBaud@sync_count+1,f
  1465  0190  2964               	goto	L3
  1466  0191                     __end_of_autoBaud:	
  1467                           
  1468                           	psect	text5
  1469  025D                     __ptext5:	
  1470 ;; *************** function _UART_write_text *****************
  1471 ;; Defined at:
  1472 ;;		line 90 in file "main.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;  text            2    1[BANK0 ] PTR unsigned char 
  1475 ;;		 -> STR_1(2), 
  1476 ;; Auto vars:     Size  Location     Type
  1477 ;;  count           2    4[BANK0 ] int 
  1478 ;; Return value:  Size  Location     Type
  1479 ;;                  1    wreg      void 
  1480 ;; Registers used:
  1481 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1482 ;; Tracked objects:
  1483 ;;		On entry : 0/0
  1484 ;;		On exit  : 0/0
  1485 ;;		Unchanged: 0/0
  1486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1487 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1488 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1489 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1490 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1491 ;;Total ram usage:        5 bytes
  1492 ;; Hardware stack levels used:    1
  1493 ;; Hardware stack levels required when called:    4
  1494 ;; This function calls:
  1495 ;;		_UART_write
  1496 ;; This function is called by:
  1497 ;;		_main
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500                           
  1501                           
  1502                           ;psect for function _UART_write_text
  1503  025D                     _UART_write_text:	
  1504                           
  1505                           ;main.c: 92: int count;
  1506                           ;main.c: 93: for(count = 0; text[count]!='\0'; count++)
  1507                           
  1508                           ;incstack = 0
  1509                           ; Regs used in _UART_write_text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1510  025D  0020               	movlb	0	; select bank0
  1511  025E  01C9               	clrf	UART_write_text@count
  1512  025F  01CA               	clrf	UART_write_text@count+1
  1513  0260                     l1114:	
  1514  0260  0846               	movf	UART_write_text@text,w
  1515  0261  0749               	addwf	UART_write_text@count,w
  1516  0262  0084               	movwf	4
  1517  0263  0847               	movf	UART_write_text@text+1,w
  1518  0264  3D4A               	addwfc	UART_write_text@count+1,w
  1519  0265  0085               	movwf	5
  1520  0266  0012               	moviw fsr0++
  1521  0267  1903               	btfsc	3,2
  1522  0268  0008               	return
  1523                           
  1524                           ;main.c: 94: {
  1525                           ;main.c: 95: UART_write(text[count]);
  1526  0269  0846               	movf	UART_write_text@text,w
  1527  026A  0749               	addwf	UART_write_text@count,w
  1528  026B  0084               	movwf	4
  1529  026C  0847               	movf	UART_write_text@text+1,w
  1530  026D  3D4A               	addwfc	UART_write_text@count+1,w
  1531  026E  0085               	movwf	5
  1532  026F  0800               	movf	0,w	;code access
  1533  0270  3182  22AA  3182   	fcall	_UART_write
  1534  0273  3001               	movlw	1
  1535  0274  0020               	movlb	0	; select bank0
  1536  0275  07C9               	addwf	UART_write_text@count,f
  1537  0276  3000               	movlw	0
  1538  0277  3DCA               	addwfc	UART_write_text@count+1,f
  1539  0278  2A60               	goto	l1114
  1540  0279                     __end_of_UART_write_text:	
  1541                           
  1542                           	psect	text6
  1543  02AA                     __ptext6:	
  1544 ;; *************** function _UART_write *****************
  1545 ;; Defined at:
  1546 ;;		line 84 in file "main.c"
  1547 ;; Parameters:    Size  Location     Type
  1548 ;;  data            1    wreg     unsigned char 
  1549 ;; Auto vars:     Size  Location     Type
  1550 ;;  data            1    0[BANK0 ] unsigned char 
  1551 ;; Return value:  Size  Location     Type
  1552 ;;                  1    wreg      void 
  1553 ;; Registers used:
  1554 ;;		wreg
  1555 ;; Tracked objects:
  1556 ;;		On entry : 0/0
  1557 ;;		On exit  : 0/0
  1558 ;;		Unchanged: 0/0
  1559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1561 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1563 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1564 ;;Total ram usage:        1 bytes
  1565 ;; Hardware stack levels used:    1
  1566 ;; Hardware stack levels required when called:    3
  1567 ;; This function calls:
  1568 ;;		Nothing
  1569 ;; This function is called by:
  1570 ;;		_UART_write_text
  1571 ;; This function uses a non-reentrant model
  1572 ;;
  1573                           
  1574                           
  1575                           ;psect for function _UART_write
  1576  02AA                     _UART_write:	
  1577                           
  1578                           ;incstack = 0
  1579                           ; Regs used in _UART_write: [wreg]
  1580                           ;UART_write@data stored from wreg
  1581  02AA  0020               	movlb	0	; select bank0
  1582  02AB  00C5               	movwf	UART_write@data
  1583  02AC                     l103:	
  1584                           ;main.c: 86: while(!TRMT);
  1585                           
  1586  02AC  0023               	movlb	3	; select bank3
  1587  02AD  1C9E               	btfss	30,1	;volatile
  1588  02AE  2AAC               	goto	l103
  1589                           
  1590                           ;main.c: 87: TXREG = data;
  1591  02AF  0020               	movlb	0	; select bank0
  1592  02B0  0845               	movf	UART_write@data,w
  1593  02B1  0023               	movlb	3	; select bank3
  1594  02B2  009A               	movwf	26	;volatile
  1595  02B3  0008               	return
  1596  02B4                     __end_of_UART_write:	
  1597                           
  1598                           	psect	intentry
  1599  0004                     __pintentry:	
  1600 ;; *************** function _ISR *****************
  1601 ;; Defined at:
  1602 ;;		line 280 in file "main.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;		None
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;  i               2   12[COMMON] int 
  1607 ;;  x               1    9[COMMON] unsigned char 
  1608 ;;  shouldDeboun    2   10[COMMON] int 
  1609 ;; Return value:  Size  Location     Type
  1610 ;;                  1    wreg      void 
  1611 ;; Registers used:
  1612 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1613 ;; Tracked objects:
  1614 ;;		On entry : 0/0
  1615 ;;		On exit  : 0/0
  1616 ;;		Unchanged: 0/0
  1617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1619 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1620 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1621 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1622 ;;Total ram usage:        7 bytes
  1623 ;; Hardware stack levels used:    1
  1624 ;; Hardware stack levels required when called:    2
  1625 ;; This function calls:
  1626 ;;		_default_handler
  1627 ;;		_enable_debounce
  1628 ;;		_process_debounce
  1629 ;;		_switch_handler
  1630 ;;		_temperature_handler
  1631 ;;		i1___bmul
  1632 ;; This function is called by:
  1633 ;;		Interrupt level 1
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637  0004                     _ISR:	
  1638                           
  1639                           ;incstack = 0
  1640  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1641                           
  1642                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1643  0005  3180               	pagesel	$
  1644  0006  0020               	movlb	0	; select bank0
  1645  0007  087F               	movf	127,w
  1646  0008  00F8               	movwf	??_ISR+1
  1647                           
  1648                           ;main.c: 281: int shouldDebounce = 0;
  1649  0009  01FA               	clrf	ISR@shouldDebounce
  1650  000A  01FB               	clrf	ISR@shouldDebounce+1
  1651                           
  1652                           ;main.c: 284: if(PIR3bits.TMR6IF){
  1653  000B  1D93               	btfss	19,3	;volatile
  1654  000C  2839               	goto	i1l146
  1655                           
  1656                           ;main.c: 285: T6CONbits.TMR6ON = 0;
  1657  000D  0028               	movlb	8	; select bank8
  1658  000E  111E               	bcf	30,2	;volatile
  1659                           
  1660                           ;main.c: 287: for(int i = 0; i < 6; ++i){
  1661  000F  01FC               	clrf	ISR@i
  1662  0010  01FD               	clrf	ISR@i+1
  1663  0011  087D               	movf	ISR@i+1,w
  1664  0012  3A80               	xorlw	128
  1665  0013  00F7               	movwf	??_ISR
  1666  0014  3080               	movlw	128
  1667  0015  0277               	subwf	??_ISR,w
  1668  0016  1D03               	skipz
  1669  0017  281A               	goto	u66_25
  1670  0018  3006               	movlw	6
  1671  0019  027C               	subwf	ISR@i,w
  1672  001A                     u66_25:	
  1673  001A  1803               	btfsc	3,0
  1674  001B  2837               	goto	i1l148
  1675  001C                     i1l1174:	
  1676                           
  1677                           ;main.c: 288: process_debounce(&sensors[i]);
  1678  001C  3006               	movlw	6
  1679  001D  00F7               	movwf	??_ISR
  1680  001E  0877               	movf	??_ISR,w
  1681  001F  00F0               	movwf	i1___bmul@multiplicand
  1682  0020  087C               	movf	ISR@i,w
  1683  0021  3182  228B  3180   	fcall	i1___bmul
  1684  0024  3E21               	addlw	(low (_sensors| 0))& (0+255)
  1685  0025  3181  21DB  3180   	fcall	_process_debounce
  1686  0028  3001               	movlw	1
  1687  0029  07FC               	addwf	ISR@i,f
  1688  002A  3000               	movlw	0
  1689  002B  3DFD               	addwfc	ISR@i+1,f
  1690  002C  087D               	movf	ISR@i+1,w
  1691  002D  3A80               	xorlw	128
  1692  002E  00F7               	movwf	??_ISR
  1693  002F  3080               	movlw	128
  1694  0030  0277               	subwf	??_ISR,w
  1695  0031  1D03               	skipz
  1696  0032  2835               	goto	u67_25
  1697  0033  3006               	movlw	6
  1698  0034  027C               	subwf	ISR@i,w
  1699  0035                     u67_25:	
  1700  0035  1C03               	skipc
  1701  0036  281C               	goto	i1l1174
  1702  0037                     i1l148:	
  1703                           
  1704                           ;main.c: 289: }
  1705                           ;main.c: 291: TMR6IF = 0;
  1706  0037  0020               	movlb	0	; select bank0
  1707  0038  1193               	bcf	19,3	;volatile
  1708  0039                     i1l146:	
  1709                           
  1710                           ;main.c: 292: }
  1711                           ;main.c: 296: if(ADIF){
  1712  0039  1F11               	btfss	17,6	;volatile
  1713  003A  284C               	goto	i1l1186
  1714                           
  1715                           ;main.c: 297: sensors[0].handler(&sensors[0]);
  1716  003B  3021               	movlw	(low (_sensors| 0))& (0+255)
  1717  003C  00F7               	movwf	??_ISR
  1718  003D  0877               	movf	??_ISR,w
  1719  003E  00F0               	movwf	switch_handler@sensor
  1720  003F  3001               	movlw	1
  1721  0040  3E21               	addlw	(low (_sensors| 0))& (0+255)
  1722  0041  0086               	movwf	6
  1723  0042  0187               	clrf	7
  1724  0043  3F41               	moviw [1]fsr1
  1725  0044  008A               	movwf	10
  1726  0045  3F40               	moviw [0]fsr1
  1727  0046  000A               	callw
  1728  0047  3180               	pagesel	$
  1729                           
  1730                           ;main.c: 299: ADCON0bits.GO = 0;
  1731  0048  0021               	movlb	1	; select bank1
  1732  0049  109D               	bcf	29,1	;volatile
  1733                           
  1734                           ;main.c: 300: ADIF = 0;
  1735  004A  0020               	movlb	0	; select bank0
  1736  004B  1311               	bcf	17,6	;volatile
  1737  004C                     i1l1186:	
  1738                           
  1739                           ;main.c: 301: }
  1740                           ;main.c: 305: if(PIR1bits.RCIF){
  1741  004C  1E91               	btfss	17,5	;volatile
  1742  004D  2855               	goto	i1l1192
  1743                           
  1744                           ;main.c: 306: char x = RCREG;
  1745  004E  0023               	movlb	3	; select bank3
  1746  004F  0819               	movf	25,w	;volatile
  1747  0050  00F7               	movwf	??_ISR
  1748  0051  0877               	movf	??_ISR,w
  1749  0052  00F9               	movwf	ISR@x
  1750                           
  1751                           ;main.c: 307: PIR1bits.RCIF = 0;
  1752  0053  0020               	movlb	0	; select bank0
  1753  0054  1291               	bcf	17,5	;volatile
  1754  0055                     i1l1192:	
  1755                           
  1756                           ;main.c: 308: }
  1757                           ;main.c: 311: if(PIR1bits.TMR2IF){
  1758  0055  1C91               	btfss	17,1	;volatile
  1759  0056  285B               	goto	i1l151
  1760                           
  1761                           ;main.c: 312: ADCON0bits.GO = 1;
  1762  0057  0021               	movlb	1	; select bank1
  1763  0058  149D               	bsf	29,1	;volatile
  1764                           
  1765                           ;main.c: 313: PIR1bits.TMR2IF = 0;
  1766  0059  0020               	movlb	0	; select bank0
  1767  005A  1091               	bcf	17,1	;volatile
  1768  005B                     i1l151:	
  1769                           
  1770                           ;main.c: 314: }
  1771                           ;main.c: 317: if(IOCAFbits.IOCAF1){
  1772  005B  0027               	movlb	7	; select bank7
  1773  005C  1C93               	btfss	19,1	;volatile
  1774  005D  2868               	goto	i1l1202
  1775                           
  1776                           ;main.c: 318: shouldDebounce = 1;
  1777  005E  3001               	movlw	1
  1778  005F  00FA               	movwf	ISR@shouldDebounce
  1779  0060  3000               	movlw	0
  1780  0061  00FB               	movwf	ISR@shouldDebounce+1
  1781                           
  1782                           ;main.c: 319: enable_debounce(&sensors[1]);
  1783  0062  3027               	movlw	(low ((_sensors| 0+6)))& (0+255)
  1784  0063  3182  2213  3180   	fcall	_enable_debounce
  1785                           
  1786                           ;main.c: 320: IOCAFbits.IOCAF1 = 0;
  1787  0066  0027               	movlb	7	; select bank7
  1788  0067  1093               	bcf	19,1	;volatile
  1789  0068                     i1l1202:	
  1790                           
  1791                           ;main.c: 321: }
  1792                           ;main.c: 324: if(IOCAFbits.IOCAF2){
  1793  0068  1D13               	btfss	19,2	;volatile
  1794  0069  2874               	goto	i1l1210
  1795                           
  1796                           ;main.c: 325: shouldDebounce = 1;
  1797  006A  3001               	movlw	1
  1798  006B  00FA               	movwf	ISR@shouldDebounce
  1799  006C  3000               	movlw	0
  1800  006D  00FB               	movwf	ISR@shouldDebounce+1
  1801                           
  1802                           ;main.c: 326: enable_debounce(&sensors[2]);
  1803  006E  302D               	movlw	(low ((_sensors| 0+12)))& (0+255)
  1804  006F  3182  2213  3180   	fcall	_enable_debounce
  1805                           
  1806                           ;main.c: 327: IOCAFbits.IOCAF2 = 0;
  1807  0072  0027               	movlb	7	; select bank7
  1808  0073  1113               	bcf	19,2	;volatile
  1809  0074                     i1l1210:	
  1810                           
  1811                           ;main.c: 328: }
  1812                           ;main.c: 331: if(IOCAFbits.IOCAF3){
  1813  0074  1D93               	btfss	19,3	;volatile
  1814  0075  2880               	goto	i1l1218
  1815                           
  1816                           ;main.c: 332: shouldDebounce = 1;
  1817  0076  3001               	movlw	1
  1818  0077  00FA               	movwf	ISR@shouldDebounce
  1819  0078  3000               	movlw	0
  1820  0079  00FB               	movwf	ISR@shouldDebounce+1
  1821                           
  1822                           ;main.c: 333: enable_debounce(&sensors[3]);
  1823  007A  3033               	movlw	(low ((_sensors| 0+18)))& (0+255)
  1824  007B  3182  2213  3180   	fcall	_enable_debounce
  1825                           
  1826                           ;main.c: 334: IOCAFbits.IOCAF3 = 0;
  1827  007E  0027               	movlb	7	; select bank7
  1828  007F  1193               	bcf	19,3	;volatile
  1829  0080                     i1l1218:	
  1830                           
  1831                           ;main.c: 335: }
  1832                           ;main.c: 338: if(IOCAFbits.IOCAF4){
  1833  0080  1E13               	btfss	19,4	;volatile
  1834  0081  288C               	goto	i1l1226
  1835                           
  1836                           ;main.c: 339: shouldDebounce = 1;
  1837  0082  3001               	movlw	1
  1838  0083  00FA               	movwf	ISR@shouldDebounce
  1839  0084  3000               	movlw	0
  1840  0085  00FB               	movwf	ISR@shouldDebounce+1
  1841                           
  1842                           ;main.c: 340: enable_debounce(&sensors[4]);
  1843  0086  3039               	movlw	(low ((_sensors| 0+24)))& (0+255)
  1844  0087  3182  2213  3180   	fcall	_enable_debounce
  1845                           
  1846                           ;main.c: 341: IOCAFbits.IOCAF4 = 0;
  1847  008A  0027               	movlb	7	; select bank7
  1848  008B  1213               	bcf	19,4	;volatile
  1849  008C                     i1l1226:	
  1850                           
  1851                           ;main.c: 342: }
  1852                           ;main.c: 345: if(IOCAFbits.IOCAF5){
  1853  008C  1E93               	btfss	19,5	;volatile
  1854  008D  2897               	goto	i1l1234
  1855                           
  1856                           ;main.c: 346: shouldDebounce = 1;
  1857  008E  3001               	movlw	1
  1858  008F  00FA               	movwf	ISR@shouldDebounce
  1859  0090  3000               	movlw	0
  1860  0091  00FB               	movwf	ISR@shouldDebounce+1
  1861                           
  1862                           ;main.c: 347: enable_debounce(&sensors[5]);
  1863  0092  303F               	movlw	(low ((_sensors| 0+30)))& (0+255)
  1864  0093  3182  2213         	fcall	_enable_debounce
  1865                           
  1866                           ;main.c: 348: IOCAFbits.IOCAF5 = 0;
  1867  0095  0027               	movlb	7	; select bank7
  1868  0096  1293               	bcf	19,5	;volatile
  1869  0097                     i1l1234:	
  1870                           
  1871                           ;main.c: 349: }
  1872                           ;main.c: 351: if(shouldDebounce){
  1873  0097  087A               	movf	ISR@shouldDebounce,w
  1874  0098  047B               	iorwf	ISR@shouldDebounce+1,w
  1875                           
  1876                           ;main.c: 352: T6CONbits.TMR6ON = 1;
  1877  0099  0028               	movlb	8	; select bank8
  1878  009A  1D03               	btfss	3,2
  1879  009B  151E               	bsf	30,2	;volatile
  1880  009C  0878               	movf	??_ISR+1,w
  1881  009D  0020               	movlb	0	; select bank0
  1882  009E  00FF               	movwf	127
  1883  009F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1884  00A0  0009               	retfie
  1885  00A1                     __end_of_ISR:	
  1886                           
  1887                           	psect	text8
  1888  028B                     __ptext8:	
  1889 ;; *************** function i1___bmul *****************
  1890 ;; Defined at:
  1891 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\Umul8.c"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;  multiplier      1    wreg     unsigned char 
  1894 ;;  multiplicand    1    0[COMMON] unsigned char 
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;  multiplier      1    2[COMMON] unsigned char 
  1897 ;;  __bmul          1    3[COMMON] unsigned char 
  1898 ;; Return value:  Size  Location     Type
  1899 ;;                  1    wreg      unsigned char 
  1900 ;; Registers used:
  1901 ;;		wreg, status,2, status,0
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1907 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1908 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1909 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1910 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1911 ;;Total ram usage:        4 bytes
  1912 ;; Hardware stack levels used:    1
  1913 ;; This function calls:
  1914 ;;		Nothing
  1915 ;; This function is called by:
  1916 ;;		_ISR
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920                           
  1921                           ;psect for function i1___bmul
  1922  028B                     i1___bmul:	
  1923                           
  1924                           ;incstack = 0
  1925                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
  1926                           ;i1___bmul@multiplier stored from wreg
  1927  028B  00F2               	movwf	i1___bmul@multiplier
  1928  028C  01F3               	clrf	i1___bmul@product
  1929  028D                     i1l1130:	
  1930  028D  1C72               	btfss	i1___bmul@multiplier,0
  1931  028E  2A93               	goto	i1l1134
  1932  028F  0870               	movf	i1___bmul@multiplicand,w
  1933  0290  00F1               	movwf	??i1___bmul
  1934  0291  0871               	movf	??i1___bmul,w
  1935  0292  07F3               	addwf	i1___bmul@product,f
  1936  0293                     i1l1134:	
  1937  0293  1003               	clrc
  1938  0294  0DF0               	rlf	i1___bmul@multiplicand,f
  1939  0295  1003               	clrc
  1940  0296  0CF2               	rrf	i1___bmul@multiplier,f
  1941  0297  0872               	movf	i1___bmul@multiplier,w
  1942  0298  1D03               	btfss	3,2
  1943  0299  2A8D               	goto	i1l1130
  1944  029A  0873               	movf	i1___bmul@product,w
  1945  029B  0008               	return
  1946  029C                     __end_ofi1___bmul:	
  1947                           
  1948                           	psect	text9
  1949  01DB                     __ptext9:	
  1950 ;; *************** function _process_debounce *****************
  1951 ;; Defined at:
  1952 ;;		line 14 in file "sensor.c"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;  sensor          1    wreg     PTR struct sensor_t
  1955 ;;		 -> sensors(36), 
  1956 ;; Auto vars:     Size  Location     Type
  1957 ;;  sensor          1    6[COMMON] PTR struct sensor_t
  1958 ;;		 -> sensors(36), 
  1959 ;; Return value:  Size  Location     Type
  1960 ;;                  1    wreg      void 
  1961 ;; Registers used:
  1962 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1963 ;; Tracked objects:
  1964 ;;		On entry : 0/0
  1965 ;;		On exit  : 0/0
  1966 ;;		Unchanged: 0/0
  1967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1969 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1970 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1971 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1972 ;;Total ram usage:        3 bytes
  1973 ;; Hardware stack levels used:    1
  1974 ;; Hardware stack levels required when called:    1
  1975 ;; This function calls:
  1976 ;;		_default_handler
  1977 ;;		_get_port_pin
  1978 ;;		_switch_handler
  1979 ;;		_temperature_handler
  1980 ;; This function is called by:
  1981 ;;		_ISR
  1982 ;; This function uses a non-reentrant model
  1983 ;;
  1984                           
  1985                           
  1986                           ;psect for function _process_debounce
  1987  01DB                     _process_debounce:	
  1988                           
  1989                           ;incstack = 0
  1990                           ; Regs used in _process_debounce: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1991                           ;process_debounce@sensor stored from wreg
  1992  01DB  00F6               	movwf	process_debounce@sensor
  1993                           
  1994                           ;sensor.c: 15: if(sensor->debounce.should_debounce &&
  1995                           ;sensor.c: 16: sensor->debounce.previous_state == get_port_pin(sensor->debounce.port, se
      +                          nsor->debounce.pin))
  1996  01DC  0876               	movf	process_debounce@sensor,w
  1997  01DD  3E03               	addlw	3
  1998  01DE  0086               	movwf	6
  1999  01DF  0187               	clrf	7
  2000  01E0  1C01               	btfss	1,0
  2001  01E1  0008               	return
  2002  01E2  0876               	movf	process_debounce@sensor,w
  2003  01E3  3E03               	addlw	3
  2004  01E4  0086               	movwf	6
  2005  01E5  0187               	clrf	7
  2006  01E6  0C01               	rrf	1,w
  2007  01E7  3901               	andlw	1
  2008  01E8  00F4               	movwf	??_process_debounce
  2009  01E9  0876               	movf	process_debounce@sensor,w
  2010  01EA  3E04               	addlw	4
  2011  01EB  0086               	movwf	6
  2012  01EC  0187               	clrf	7
  2013  01ED  3F40               	moviw [0]fsr1
  2014  01EE  00F0               	movwf	get_port_pin@port
  2015  01EF  3F41               	moviw [1]fsr1
  2016  01F0  00F1               	movwf	get_port_pin@port+1
  2017  01F1  0876               	movf	process_debounce@sensor,w
  2018  01F2  3E03               	addlw	3
  2019  01F3  0086               	movwf	6
  2020  01F4  0187               	clrf	7
  2021  01F5  0C01               	rrf	1,w
  2022  01F6  0C89               	rrf	9,f
  2023  01F7  3907               	andlw	7
  2024  01F8  00F5               	movwf	??_process_debounce+1
  2025  01F9  0875               	movf	??_process_debounce+1,w
  2026  01FA  00F2               	movwf	get_port_pin@pin
  2027  01FB  3182  229C  3181   	fcall	_get_port_pin
  2028  01FE  0674               	xorwf	??_process_debounce,w
  2029  01FF  1D03               	skipz
  2030  0200  0008               	return
  2031                           
  2032                           ;sensor.c: 17: {
  2033                           ;sensor.c: 18: sensor->handler(sensor);
  2034  0201  0876               	movf	process_debounce@sensor,w
  2035  0202  00F4               	movwf	??_process_debounce
  2036  0203  0874               	movf	??_process_debounce,w
  2037  0204  00F0               	movwf	switch_handler@sensor
  2038  0205  0A76               	incf	process_debounce@sensor,w
  2039  0206  0086               	movwf	6
  2040  0207  0187               	clrf	7
  2041  0208  3F41               	moviw [1]fsr1
  2042  0209  008A               	movwf	10
  2043  020A  3F40               	moviw [0]fsr1
  2044  020B  000A               	callw
  2045  020C  3181               	pagesel	$
  2046                           
  2047                           ;sensor.c: 19: sensor->debounce.should_debounce = 0;
  2048  020D  0876               	movf	process_debounce@sensor,w
  2049  020E  3E03               	addlw	3
  2050  020F  0086               	movwf	6
  2051  0210  0187               	clrf	7
  2052  0211  1001               	bcf	1,0
  2053  0212  0008               	return
  2054  0213                     __end_of_process_debounce:	
  2055                           
  2056                           	psect	text10
  2057  02BA                     __ptext10:	
  2058 ;; *************** function _switch_handler *****************
  2059 ;; Defined at:
  2060 ;;		line 80 in file "main.c"
  2061 ;; Parameters:    Size  Location     Type
  2062 ;;  sensor          1    0[COMMON] PTR struct sensor_t
  2063 ;;		 -> sensors(36), 
  2064 ;; Auto vars:     Size  Location     Type
  2065 ;;		None
  2066 ;; Return value:  Size  Location     Type
  2067 ;;                  1    wreg      void 
  2068 ;; Registers used:
  2069 ;;		None
  2070 ;; Tracked objects:
  2071 ;;		On entry : 0/0
  2072 ;;		On exit  : 0/0
  2073 ;;		Unchanged: 0/0
  2074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2075 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2078 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2079 ;;Total ram usage:        1 bytes
  2080 ;; Hardware stack levels used:    1
  2081 ;; This function calls:
  2082 ;;		Nothing
  2083 ;; This function is called by:
  2084 ;;		_initialize_sensors
  2085 ;;		_process_debounce
  2086 ;;		_ISR
  2087 ;; This function uses a non-reentrant model
  2088 ;;
  2089                           
  2090                           
  2091                           ;psect for function _switch_handler
  2092  02BA                     _switch_handler:	
  2093                           
  2094                           ;main.c: 81: should_autobaud = 1;
  2095                           
  2096                           ;incstack = 0
  2097                           ; Regs used in _switch_handler: []
  2098  02BA  0020               	movlb	0	; select bank0
  2099  02BB  01A0               	clrf	_should_autobaud
  2100  02BC  0AA0               	incf	_should_autobaud,f
  2101  02BD  0008               	return
  2102  02BE                     __end_of_switch_handler:	
  2103                           
  2104                           	psect	text11
  2105  02C0                     __ptext11:	
  2106 ;; *************** function _default_handler *****************
  2107 ;; Defined at:
  2108 ;;		line 72 in file "main.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;  sensor          1    0[COMMON] PTR struct sensor_t
  2111 ;;		 -> sensors(36), 
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;		None
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  1    wreg      void 
  2116 ;; Registers used:
  2117 ;;		None
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2123 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2126 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2127 ;;Total ram usage:        1 bytes
  2128 ;; Hardware stack levels used:    1
  2129 ;; This function calls:
  2130 ;;		Nothing
  2131 ;; This function is called by:
  2132 ;;		_initialize_sensors
  2133 ;;		_process_debounce
  2134 ;;		_ISR
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           
  2139                           ;psect for function _default_handler
  2140  02C0                     _default_handler:	
  2141                           
  2142                           ;incstack = 0
  2143                           ; Regs used in _default_handler: []
  2144  02C0  0008               	return
  2145  02C1                     __end_of_default_handler:	
  2146                           
  2147                           	psect	text12
  2148  02C1                     __ptext12:	
  2149 ;; *************** function _temperature_handler *****************
  2150 ;; Defined at:
  2151 ;;		line 76 in file "main.c"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;  sensor          1    0[COMMON] PTR struct sensor_t
  2154 ;;		 -> sensors(36), 
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;		None
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  1    wreg      void 
  2159 ;; Registers used:
  2160 ;;		None
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2166 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2169 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2170 ;;Total ram usage:        1 bytes
  2171 ;; Hardware stack levels used:    1
  2172 ;; This function calls:
  2173 ;;		Nothing
  2174 ;; This function is called by:
  2175 ;;		_initialize_sensors
  2176 ;;		_process_debounce
  2177 ;;		_ISR
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181                           
  2182                           ;psect for function _temperature_handler
  2183  02C1                     _temperature_handler:	
  2184                           
  2185                           ;incstack = 0
  2186                           ; Regs used in _temperature_handler: []
  2187  02C1  0008               	return
  2188  02C2                     __end_of_temperature_handler:	
  2189                           
  2190                           	psect	text13
  2191  0213                     __ptext13:	
  2192 ;; *************** function _enable_debounce *****************
  2193 ;; Defined at:
  2194 ;;		line 9 in file "sensor.c"
  2195 ;; Parameters:    Size  Location     Type
  2196 ;;  sensor          1    wreg     PTR struct sensor_t
  2197 ;;		 -> sensors(36), 
  2198 ;; Auto vars:     Size  Location     Type
  2199 ;;  sensor          1    6[COMMON] PTR struct sensor_t
  2200 ;;		 -> sensors(36), 
  2201 ;; Return value:  Size  Location     Type
  2202 ;;                  1    wreg      void 
  2203 ;; Registers used:
  2204 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2205 ;; Tracked objects:
  2206 ;;		On entry : 0/0
  2207 ;;		On exit  : 0/0
  2208 ;;		Unchanged: 0/0
  2209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2211 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2212 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2213 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2214 ;;Total ram usage:        3 bytes
  2215 ;; Hardware stack levels used:    1
  2216 ;; Hardware stack levels required when called:    1
  2217 ;; This function calls:
  2218 ;;		_get_port_pin
  2219 ;; This function is called by:
  2220 ;;		_ISR
  2221 ;; This function uses a non-reentrant model
  2222 ;;
  2223                           
  2224                           
  2225                           ;psect for function _enable_debounce
  2226  0213                     _enable_debounce:	
  2227                           
  2228                           ;incstack = 0
  2229                           ; Regs used in _enable_debounce: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2230                           ;enable_debounce@sensor stored from wreg
  2231  0213  00F6               	movwf	enable_debounce@sensor
  2232                           
  2233                           ;sensor.c: 10: sensor->debounce.should_debounce = 1;
  2234  0214  0876               	movf	enable_debounce@sensor,w
  2235  0215  3E03               	addlw	3
  2236  0216  0086               	movwf	6
  2237  0217  0187               	clrf	7
  2238  0218  1401               	bsf	1,0
  2239                           
  2240                           ;sensor.c: 11: sensor->debounce.previous_state = get_port_pin(sensor->debounce.port, sen
      +                          sor->debounce.pin);
  2241  0219  0876               	movf	enable_debounce@sensor,w
  2242  021A  3E04               	addlw	4
  2243  021B  0086               	movwf	6
  2244  021C  0187               	clrf	7
  2245  021D  3F40               	moviw [0]fsr1
  2246  021E  00F0               	movwf	get_port_pin@port
  2247  021F  3F41               	moviw [1]fsr1
  2248  0220  00F1               	movwf	get_port_pin@port+1
  2249  0221  0876               	movf	enable_debounce@sensor,w
  2250  0222  3E03               	addlw	3
  2251  0223  0086               	movwf	6
  2252  0224  0187               	clrf	7
  2253  0225  0C01               	rrf	1,w
  2254  0226  0C89               	rrf	9,f
  2255  0227  3907               	andlw	7
  2256  0228  00F4               	movwf	??_enable_debounce
  2257  0229  0874               	movf	??_enable_debounce,w
  2258  022A  00F2               	movwf	get_port_pin@pin
  2259  022B  3182  229C         	fcall	_get_port_pin
  2260  022D  00F5               	movwf	??_enable_debounce+1
  2261  022E  0876               	movf	enable_debounce@sensor,w
  2262  022F  3E03               	addlw	3
  2263  0230  0086               	movwf	6
  2264  0231  0187               	clrf	7
  2265  0232  0DF5               	rlf	??_enable_debounce+1,f
  2266  0233  0801               	movf	1,w
  2267  0234  0675               	xorwf	??_enable_debounce+1,w
  2268  0235  39FD               	andlw	-3
  2269  0236  0675               	xorwf	??_enable_debounce+1,w
  2270  0237  0081               	movwf	1
  2271  0238  0008               	return
  2272  0239                     __end_of_enable_debounce:	
  2273                           
  2274                           	psect	text14
  2275  029C                     __ptext14:	
  2276 ;; *************** function _get_port_pin *****************
  2277 ;; Defined at:
  2278 ;;		line 5 in file "sensor.c"
  2279 ;; Parameters:    Size  Location     Type
  2280 ;;  port            2    0[COMMON] PTR unsigned char 
  2281 ;;		 -> PORTA(1), 
  2282 ;;  pin             1    2[COMMON] unsigned char 
  2283 ;; Auto vars:     Size  Location     Type
  2284 ;;		None
  2285 ;; Return value:  Size  Location     Type
  2286 ;;                  1    wreg      unsigned char 
  2287 ;; Registers used:
  2288 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2289 ;; Tracked objects:
  2290 ;;		On entry : 0/0
  2291 ;;		On exit  : 0/0
  2292 ;;		Unchanged: 0/0
  2293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2294 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2296 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2297 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2298 ;;Total ram usage:        4 bytes
  2299 ;; Hardware stack levels used:    1
  2300 ;; This function calls:
  2301 ;;		Nothing
  2302 ;; This function is called by:
  2303 ;;		_enable_debounce
  2304 ;;		_process_debounce
  2305 ;; This function uses a non-reentrant model
  2306 ;;
  2307                           
  2308                           
  2309                           ;psect for function _get_port_pin
  2310  029C                     _get_port_pin:	
  2311                           
  2312                           ;sensor.c: 6: return (*port & (1U << pin));
  2313                           
  2314                           ;incstack = 0
  2315                           ; Regs used in _get_port_pin: [wreg+fsr1l+fsr1h+status,2+status,0]
  2316  029C  0870               	movf	get_port_pin@port,w
  2317  029D  0086               	movwf	6
  2318  029E  0871               	movf	get_port_pin@port+1,w
  2319  029F  0087               	movwf	7
  2320  02A0  3001               	movlw	1
  2321  02A1  00F3               	movwf	??_get_port_pin
  2322  02A2  0A72               	incf	get_port_pin@pin,w
  2323  02A3  2AA5               	goto	u42_24
  2324  02A4                     u42_25:	
  2325  02A4  35F3               	lslf	??_get_port_pin,f
  2326  02A5                     u42_24:	
  2327  02A5  0B89               	decfsz	9,f
  2328  02A6  2AA4               	goto	u42_25
  2329  02A7  0873               	movf	??_get_port_pin,w
  2330  02A8  0501               	andwf	1,w
  2331  02A9  0008               	return
  2332  02AA                     __end_of_get_port_pin:	
  2333  007E                     btemp	set	126	;btemp
  2334  007E                     int$flags	set	126
  2335  007E                     wtemp0	set	126


Data Sizes:
    Strings     2
    Constant    0
    Data        0
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      9      46
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    default_handler@sensor	PTR struct sensor_t size(1) Largest target is 36
		 -> sensors(BANK0[36]), 

    temperature_handler@sensor	PTR struct sensor_t size(1) Largest target is 36
		 -> sensors(BANK0[36]), 

    switch_handler@sensor	PTR struct sensor_t size(1) Largest target is 36
		 -> sensors(BANK0[36]), 

    S20$1$0	PTR struct sensor_t size(1) Largest target is 36
		 -> sensors(BANK0[36]), 

    process_debounce@sensor.debounce.port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    process_debounce@sensor.handler	PTR FTN(PTR struct sensor_t,)void  size(2) Largest target is 1
		 -> switch_handler(), temperature_handler(), default_handler(), 

    process_debounce@sensor	PTR struct sensor_t size(1) Largest target is 36
		 -> sensors(BANK0[36]), 

    enable_debounce@sensor.debounce.port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    enable_debounce@sensor.handler	PTR FTN(PTR struct sensor_t,)void  size(2) Largest target is 1
		 -> switch_handler(), temperature_handler(), default_handler(), 

    enable_debounce@sensor	PTR struct sensor_t size(1) Largest target is 36
		 -> sensors(BANK0[36]), 

    get_port_pin@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    S21debounce_t$port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    sensors.debounce.port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    S20sensor_t$handler	PTR FTN(PTR struct sensor_t,)void  size(2) Largest target is 1
		 -> switch_handler(), temperature_handler(), default_handler(), 

    sensors.handler	PTR FTN(PTR struct sensor_t,)void  size(2) Largest target is 1
		 -> switch_handler(), temperature_handler(), default_handler(), 

    UART_write_text@text	PTR unsigned char  size(2) Largest target is 2
		 -> STR_1(CODE[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_enable_debounce
    _ISR->_process_debounce
    _process_debounce->_get_port_pin
    _enable_debounce->_get_port_pin

Critical Paths under _main in BANK0

    _main->_initialize_sensors
    _initialize_sensors->___bmul
    _UART_write_text->_UART_write

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     651
                    _UART_write_text
                           _autoBaud
                     _initialize_PIC
                 _initialize_sensors
 ---------------------------------------------------------------------------------
 (1) _initialize_sensors                                   5     5      0     381
                                              4 BANK0      5     5      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     203
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _initialize_PIC                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _autoBaud                                             6     6      0      94
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _UART_write_text                                      5     3      2     176
                                              1 BANK0      5     3      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (2) _UART_write                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  7     7      0    1378
                                              7 COMMON     7     7      0
                    _default_handler *
                    _enable_debounce
                   _process_debounce
                     _switch_handler *
                _temperature_handler *
                           i1___bmul
 ---------------------------------------------------------------------------------
 (4) i1___bmul                                             4     3      1      87
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) _process_debounce                                     3     3      0     570
                                              4 COMMON     3     3      0
                    _default_handler *
                       _get_port_pin
                     _switch_handler *
                _temperature_handler *
 ---------------------------------------------------------------------------------
 (4) _temperature_handler                                  1     0      1       0
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) _switch_handler                                       1     0      1      86
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (5) _default_handler                                      1     0      1       0
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) _enable_debounce                                      3     3      0     538
                                              4 COMMON     3     3      0
                       _get_port_pin
 ---------------------------------------------------------------------------------
 (5) _get_port_pin                                         4     1      3     300
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_write_text
     _UART_write
   _autoBaud
   _initialize_PIC
   _initialize_sensors
     ___bmul

 _ISR (ROOT)
   _default_handler *
   _enable_debounce *
     _get_port_pin
   _process_debounce *
     _default_handler *
     _get_port_pin *
     _switch_handler *
     _temperature_handler *
   _switch_handler *
   _temperature_handler *
   i1___bmul *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      9      2E       5       57.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      3C      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      3C      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Tue Jan 03 11:18:22 2017

              ___bmul@product 0047                   __CFG_CP$OFF 0000                            l87 0258  
               ?_get_port_pin 0070                   __CFG_LVP$ON 0000                           l103 02AC  
                         l130 0132                           l125 0123                           l134 015C  
                         l126 0130                           l127 0126                           l128 0129  
                         l129 012D                           l138 016F                           l964 027C  
                         l968 0282                  __CFG_CPD$OFF 0000                           _PR6 041D  
                         _ISR 0004                           u525 016D                           u455 00BA  
                         u465 0116                           u555 0185                  __CFG_BORV$LO 0000  
                         wreg 0009                  __CFG_IESO$ON 0000                          ?_ISR 0070  
                        ISR@i 007C                          ISR@x 0079                          l1100 0187  
                        l1102 018B                          l1114 0260                          l1062 00BC  
                        l1090 0161                          l1082 0144                          l1074 0147  
                        l1146 023F                          l1068 0118                          l1156 0253  
                        l1258 014D                          _ADIF 008E                          STR_1 02BE  
                        _LATC 010E              ??_initialize_PIC 0045                          _TRMT 0CF1  
                __CFG_WRT$OFF 0000                 __CFG_FCMEN$ON 0000                          _main 0239  
                        fsr0h 0005                          fsr1h 0007                          indf0 0000  
                        fsr0l 0004                          indf1 0001                          fsr1l 0006  
                        btemp 007E                 __CFG_BOREN$ON 0000                          start 00A1  
           ___bmul@multiplier 0048                 __CFG_MCLRE$ON 0000                         ??_ISR 0077  
              ??_get_port_pin 0073                         ?_main 0070                         _BRG16 0CFB  
               __CFG_WDTE$OFF 0000                         _T2CON 001C                         _T6CON 041E  
                       i1l151 005B                         i1l146 0039                         i1l148 0037  
                       _RCREG 0199                         _SPBRG 019B                         u42_24 02A5  
                       u42_25 02A4                         _PORTA 000C                         u66_25 001A  
                       u67_25 0035                         _TXREG 019A               autoBaud@discard 0046  
                 ?_UART_write 0070               _enable_debounce 0213              __end_ofi1___bmul 029C  
   temperature_handler@sensor 0070                         pclath 000A                         status 0003  
                       wtemp0 007E   __end_of_temperature_handler 02C2               __initialization 00A3  
                __end_of_main 025D   __size_of_initialize_sensors 0074                        ??_main 004E  
              __CFG_PLLEN$OFF 0000     __size_of_process_debounce 0038                        _ADCON0 009D  
                      _ADCON1 009E                        i1l1130 028D                        i1l1210 0074  
                      i1l1202 0068                        i1l1134 0293                        i1l1234 0097  
                      i1l1226 008C                        i1l1218 0080                        i1l1174 001C  
                      i1l1192 0055                        i1l1186 004C                        _INTCON 000B  
                      _OSCCON 0099                        _SPBRGH 019C                        _TMR6IF 009B  
              __CFG_PWRTE$OFF 0000                        ___bmul 0279              __end_of_autoBaud 0191  
              __CFG_STVREN$ON 0000           __size_of_UART_write 000A               _default_handler 02C0  
     __end_of_enable_debounce 0239               _UART_write_text 025D          __end_of_get_port_pin 02AA  
     __end_of__initialization 00AA          switch_handler@sensor 0070           ___bmul@multiplicand 0045  
              __pcstackCOMMON 0070                 autoBaud@index 0049                     ?i1___bmul 0070  
       enable_debounce@sensor 0076              i1___bmul@product 0073          UART_write_text@count 0049  
                  __pbssBANK0 0020       __end_of_default_handler 02C1                    __pmaintext 0239  
                     ?___bmul 0045                    __pintentry 0004           initialize_sensors@i 004C  
     __end_of_UART_write_text 0279                    ??i1___bmul 0071              ?_enable_debounce 0070  
            _process_debounce 01DB                  ??_UART_write 0045                     ?_autoBaud 0070  
     __size_of_switch_handler 0004               __size_of___bmul 0012            __end_of_UART_write 02B4  
                     __ptext1 00AE                       __ptext2 0279                       __ptext3 0191  
                     __ptext4 0122                       __ptext5 025D                       __ptext6 02AA  
                     __ptext8 028B                       __ptext9 01DB                  __size_of_ISR 009D  
                   _IOCAFbits 0393           i1___bmul@multiplier 0072                     _IOCANbits 0392  
                   _IOCAPbits 0391                     _T6CONbits 041E                       _sensors 0021  
       __size_of_get_port_pin 000E                       clrloop0 02B5          end_of_initialization 00AA  
                  ??_autoBaud 0045              ?_default_handler 0070                     _RCSTAbits 019D  
     __size_of_initialize_PIC 004A    __end_of_initialize_sensors 0122                  __pstringtext 02BE  
__size_of_temperature_handler 0001              ?_UART_write_text 0046                  _get_port_pin 029C  
            __CFG_FOSC$INTOSC 0000                     _TRISAbits 008C                     _TRISCbits 008E  
                   _TXSTAbits 019E        process_debounce@sensor 0076                __end_of___bmul 028B  
                 _BAUDCONbits 019F             __size_ofi1___bmul 0011           start_initialization 00A3  
                 __end_of_ISR 00A1                _switch_handler 02BA                   _APFCON0bits 011D  
                    ??___bmul 0046      __end_of_process_debounce 0213                     ___latbits 0002  
               __pcstackBANK0 0045        __end_of_switch_handler 02BE             __size_of_autoBaud 006F  
         UART_write_text@text 0046                _initialize_PIC 0191              get_port_pin@port 0070  
             _should_autobaud 0020               ?_switch_handler 0070           _temperature_handler 02C1  
    __size_of_enable_debounce 0026                     clear_ram0 02B4                      _PIE1bits 0091  
                    _PIE3bits 0093        __end_of_initialize_PIC 01DB         i1___bmul@multiplicand 0070  
                    _PIR1bits 0011                      _PIR3bits 0013          ?_temperature_handler 0070  
                    i1___bmul 028B                    _ADCON0bits 009D                UART_write@data 0045  
          _initialize_sensors 00AE         default_handler@sensor 0070           ?_initialize_sensors 0070  
             ?_initialize_PIC 0070         ??_temperature_handler 0071          ??_initialize_sensors 0049  
    __size_of_default_handler 0001                    _ANSELAbits 018C      __size_of_UART_write_text 001C  
                    __ptext10 02BA                      __ptext11 02C0                      __ptext12 02C1  
                    __ptext13 0213                      __ptext14 029C               get_port_pin@pin 0072  
                    _autoBaud 0122                 __size_of_main 0024             ??_enable_debounce 0074  
           ?_process_debounce 0070                      int$flags 007E            ??_process_debounce 0074  
           ISR@shouldDebounce 007A                      intlevel1 0000             __CFG_CLKOUTEN$OFF 0000  
            ??_switch_handler 0071             ??_default_handler 0071                    _UART_write 02AA  
          autoBaud@sync_count 0047             ??_UART_write_text 0048  
